X1 <- t(breast.TCGA$data.train$mirna)[1:60, c(1, 2, 3, 4, 5, 6, 61, 62, 63, 141, 142, 143)]
X2 <- t(breast.TCGA$data.train$mrna)[1:60, c(1, 2, 3, 4, 5, 6, 61, 62, 63, 141, 142, 143)]
X3 <- t(breast.TCGA$data.train$protein)[1:60, c(1, 2, 3, 4, 5, 6, 61, 62, 63, 141, 142, 143)]
# rename column
colnames(X1) <- c("Control.C1", "Control.C2", "Control.C3", "Control.C1", "Control.C2", "Control.C3", "Treated.A1", "Treated.A2", "Treated.A3", "Treated.A1", "Treated.A2", "Treated.A3")
colnames(X2) <- c("Control.C1", "Control.C2", "Control.C3", "Control.C1", "Control.C2", "Control.C3", "Treated.A1", "Treated.A2", "Treated.A3", "Treated.A1", "Treated.A2", "Treated.A3")
colnames(X3) <- c("Control.C1", "Control.C2", "Control.C3", "Control.C1", "Control.C2", "Control.C3", "Treated.A1", "Treated.A2", "Treated.A3", "Treated.A1", "Treated.A2", "Treated.A3")
rownames(X1) <- NULL
rownames(X2) <- NULL
rownames(X3) <- NULL
meta_data <- data.frame(
ID = c("Control.C1", "Control.C2", "Control.C3", "Control.C1", "Control.C2", "Control.C3", "Treated.A1", "Treated.A2", "Treated.A3", "Treated.A1", "Treated.A2", "Treated.A3"),
Genotype = c("Moneymaker", "Moneymaker", "Moneymaker", "Saladette", "Saladette", "Saladette", "Moneymaker", "Moneymaker", "Moneymaker", "Saladette", "Saladette", "Saladette"),
#time = c(rep("Control", 6), rep("Treatment", 6))
time = c(rep("Control", 12))
)
#Rename columns
names(meta_data)[1] <- "ID"
names(meta_data)[2] <- "condition1"
names(meta_data)[3] <- "condition2"
# Control data
# Step 1: Find the unique values in the condition1 column
unique_times <- unique(meta_data$condition2)
if (!(length(unique_times) > 1)) {
# Control condition for selecting rows based on values
condition <- meta_data$condition2 == unique_times[1]
# Select rows based on the condition and all columns
control <- meta_data[condition, ]
# Genotype1 based selection
# Step 2: Find the unique values in the condition1 column
unique_genotypes <- unique(control$condition1)
Genotype1 <- control$condition1 == unique_genotypes[1]
# Select rows based on the condition and all columns
Moneymaker <- control[Genotype1, c('ID')]
# Convert the "ID" column to a character vector
Moneymaker_C0 <- X1[, as.character(Moneymaker)]
# Convert Moneymaker_C0 to a data frame
Moneymaker_C0 <- data.frame(Moneymaker_C0)
# Add condition1 column with values "Control"
Moneymaker_C0$condition2 <- unique_times[1]
# Reshape the data
CTR_Moneymaker_C0 <- Moneymaker_C0 %>%
gather(key = "Variable", value = "Score", -condition2)
# Create a new column "condition1" with the value "Moneymaker"
CTR_Moneymaker_C0$condition1 <- unique_genotypes[1]
# Control Genotype2 based selection
Genotype2 <- control$condition1 == unique_genotypes[2]
# Select rows based on the condition and all columns
Saladette <- control[Genotype2, c('ID')]
# Convert the "ID" column to a character vector
Saladette_C0 <- X1[, as.character(Saladette)]
# Convert Saladette_C0 to a data frame
Saladette_C0 <- data.frame(Saladette_C0)
# Add condition1 column with values "Control"
Saladette_C0$condition2 <- unique_times[1]
# Reshape the data
CTR_Saladette_C0 <- Saladette_C0 %>%
gather(key = "Variable", value = "Score", -condition2)
# Create a new column "condition1" with the value "Saladette"
CTR_Saladette_C0$condition1 <- unique_genotypes[2]
merged_df1 <- merge(CTR_Moneymaker_C0, CTR_Saladette_C0, all = TRUE)
# Input directory and data
my_data <- merged_df1
# Step 3: Run the two-way ANOVA using the "aov" function
#my_model <- aov(Score ~ condition1 + condition2:condition1, data = my_data)
# Run one-way ANOVA
my_model <- aov(Score ~ condition1, data = my_data)
# Step 4: Check the ANOVA table to see if there are significant effects for each factor and their interaction
a = summary(my_model)
anova_t = a[[1]]
# list output
anova_data(anova_t)
} else if (length(unique_times) >= 2) {
# Control condition for selecting rows based on values
condition <- meta_data$condition2 == unique_times[1]
# Select rows based on the condition and all columns
control <- meta_data[condition, ]
# Genotype1 based selection
# Step 2: Find the unique values in the condition1 column
unique_genotypes <- unique(control$condition1)
Genotype1 <- control$condition1 == unique_genotypes[1]
# Select rows based on the condition and all columns
Moneymaker <- control[Genotype1, c('ID')]
# Convert the "ID" column to a character vector
Moneymaker_C0 <- X1[, as.character(Moneymaker)]
# Convert Moneymaker_C0 to a data frame
Moneymaker_C0 <- data.frame(Moneymaker_C0)
# Add condition1 column with values "Control"
Moneymaker_C0$condition2 <- unique_times[1]
# Reshape the data
CTR_Moneymaker_C0 <- Moneymaker_C0 %>%
gather(key = "Variable", value = "Score", -condition2)
# Create a new column "condition1" with the value "Moneymaker"
CTR_Moneymaker_C0$condition1 <- unique_genotypes[1]
# Control Genotype2 based selection
Genotype2 <- control$condition1 == unique_genotypes[2]
# Select rows based on the condition and all columns
Saladette <- control[Genotype2, c('ID')]
# Convert the "ID" column to a character vector
Saladette_C0 <- X1[, as.character(Saladette)]
# Convert Saladette_C0 to a data frame
Saladette_C0 <- data.frame(Saladette_C0)
# Add condition1 column with values "Control"
Saladette_C0$condition2 <- unique_times[1]
# Reshape the data
CTR_Saladette_C0 <- Saladette_C0 %>%
gather(key = "Variable", value = "Score", -condition2)
# Create a new column "condition1" with the value "Saladette"
CTR_Saladette_C0$condition1 <- unique_genotypes[2]
# Treated data
# treated condition for selecting rows based on values
condition <- meta_data$condition2 == unique_times[2]
# Select rows based on the condition and all columns
treated <- meta_data[condition, ]
# Genotype1 based selection
# Step 2: Find the unique values in the condition1 column
unique_genotypes <- unique(treated$condition1)
Genotype1 <- treated$condition1 == unique_genotypes[1]
# Select rows based on the condition and all columns
Moneymaker <- treated[Genotype1, c('ID')]
# Convert the "ID" column to a character vector
Moneymaker_T <- X1[, as.character(Moneymaker)]
# Convert Moneymaker_T to a data frame
Moneymaker_T <- data.frame(Moneymaker_T)
# Add condition1 column with values "Control"
Moneymaker_T$condition2 <- unique_times[2]
# Reshape the data
Moneymaker_T <- Moneymaker_T %>%
gather(key = "Variable", value = "Score", -condition2)
# Create a new column "condition1" with the value "Moneymaker"
Moneymaker_T$condition1 <- unique_genotypes[1]
# Treated Genotype2 based selection
Genotype2 <- treated$condition1 == unique_genotypes[2]
# Select rows based on the condition and all columns
Saladette <- treated[Genotype2, c('ID')]
# Convert the "ID" column to a character vector
Saladette_T <- X1[, as.character(Saladette)]
# Convert Saladette_T to a data frame
Saladette_T <- data.frame(Saladette_T)
# Add condition1 column with values "Control"
Saladette_T$condition2 <- unique_times[2]
# Reshape the data
Saladette_T <- Saladette_T %>%
gather(key = "Variable", value = "Score", -condition2)
# Create a new column "condition1" with the value "Saladette"
Saladette_T$condition1 <- unique_genotypes[2]
#merging all tables
merged_df1 <- merge(CTR_Moneymaker_C0, CTR_Saladette_C0, all = TRUE)
merged_df2 <- merge(Moneymaker_T, Saladette_T, all = TRUE)
#merging INTO FINAL tables
CTR_TR_Geno <- merge(merged_df1, merged_df2, all = TRUE)
# Input directory and data
my_data <- CTR_TR_Geno
# Step 3: Run the two-way ANOVA using the "aov" function
my_model <- aov(Score ~ condition2 + condition1 + condition2:condition1, data = my_data)
# Step 4: Check the ANOVA table to see if there are significant effects for each factor and their interaction
a = summary(my_model)
anova_t = a[[1]]
# list output
#anova_data(anova_t)
}
library(mixOmics)
data(breast.TCGA)
X1 <- t(breast.TCGA$data.train$mirna)[1:60, c(1, 2, 3, 4, 5, 6, 61, 62, 63, 141, 142, 143)]
X2 <- t(breast.TCGA$data.train$mrna)[1:60, c(1, 2, 3, 4, 5, 6, 61, 62, 63, 141, 142, 143)]
X3 <- t(breast.TCGA$data.train$protein)[1:60, c(1, 2, 3, 4, 5, 6, 61, 62, 63, 141, 142, 143)]
# rename column
colnames(X1) <- c("Control.C1", "Control.C2", "Control.C3", "Control.C1", "Control.C2", "Control.C3", "Treated.A1", "Treated.A2", "Treated.A3", "Treated.A1", "Treated.A2", "Treated.A3")
colnames(X2) <- c("Control.C1", "Control.C2", "Control.C3", "Control.C1", "Control.C2", "Control.C3", "Treated.A1", "Treated.A2", "Treated.A3", "Treated.A1", "Treated.A2", "Treated.A3")
colnames(X3) <- c("Control.C1", "Control.C2", "Control.C3", "Control.C1", "Control.C2", "Control.C3", "Treated.A1", "Treated.A2", "Treated.A3", "Treated.A1", "Treated.A2", "Treated.A3")
rownames(X1) <- NULL
rownames(X2) <- NULL
rownames(X3) <- NULL
meta_data <- data.frame(
ID = c("Control.C1", "Control.C2", "Control.C3", "Control.C1", "Control.C2", "Control.C3", "Treated.A1", "Treated.A2", "Treated.A3", "Treated.A1", "Treated.A2", "Treated.A3"),
Genotype = c("Moneymaker", "Moneymaker", "Moneymaker", "Saladette", "Saladette", "Saladette", "Moneymaker", "Moneymaker", "Moneymaker", "Saladette", "Saladette", "Saladette"),
#time = c(rep("Control", 6), rep("Treatment", 6))
time = c(rep("Control", 12))
)
#Rename columns
names(meta_data)[1] <- "ID"
names(meta_data)[2] <- "condition1"
names(meta_data)[3] <- "condition2"
# Control data
# Step 1: Find the unique values in the condition1 column
unique_times <- unique(meta_data$condition2)
if (!(length(unique_times) > 1)) {
# Control condition for selecting rows based on values
condition <- meta_data$condition2 == unique_times[1]
# Select rows based on the condition and all columns
control <- meta_data[condition, ]
# Genotype1 based selection
# Step 2: Find the unique values in the condition1 column
unique_genotypes <- unique(control$condition1)
Genotype1 <- control$condition1 == unique_genotypes[1]
# Select rows based on the condition and all columns
Moneymaker <- control[Genotype1, c('ID')]
# Convert the "ID" column to a character vector
Moneymaker_C0 <- X1[, as.character(Moneymaker)]
# Convert Moneymaker_C0 to a data frame
Moneymaker_C0 <- data.frame(Moneymaker_C0)
# Add condition1 column with values "Control"
Moneymaker_C0$condition2 <- unique_times[1]
# Reshape the data
CTR_Moneymaker_C0 <- Moneymaker_C0 %>%
gather(key = "Variable", value = "Score", -condition2)
# Create a new column "condition1" with the value "Moneymaker"
CTR_Moneymaker_C0$condition1 <- unique_genotypes[1]
# Control Genotype2 based selection
Genotype2 <- control$condition1 == unique_genotypes[2]
# Select rows based on the condition and all columns
Saladette <- control[Genotype2, c('ID')]
# Convert the "ID" column to a character vector
Saladette_C0 <- X1[, as.character(Saladette)]
# Convert Saladette_C0 to a data frame
Saladette_C0 <- data.frame(Saladette_C0)
# Add condition1 column with values "Control"
Saladette_C0$condition2 <- unique_times[1]
# Reshape the data
CTR_Saladette_C0 <- Saladette_C0 %>%
gather(key = "Variable", value = "Score", -condition2)
# Create a new column "condition1" with the value "Saladette"
CTR_Saladette_C0$condition1 <- unique_genotypes[2]
merged_df1 <- merge(CTR_Moneymaker_C0, CTR_Saladette_C0, all = TRUE)
# Input directory and data
my_data <- merged_df1
# Step 3: Run the two-way ANOVA using the "aov" function
#my_model <- aov(Score ~ condition1 + condition2:condition1, data = my_data)
# Run one-way ANOVA
my_model <- aov(Score ~ condition1, data = my_data)
# Step 4: Check the ANOVA table to see if there are significant effects for each factor and their interaction
a = summary(my_model)
anova_t = a[[1]]
# list output
#anova_data(anova_t)
} else if (length(unique_times) >= 2) {
# Control condition for selecting rows based on values
condition <- meta_data$condition2 == unique_times[1]
# Select rows based on the condition and all columns
control <- meta_data[condition, ]
# Genotype1 based selection
# Step 2: Find the unique values in the condition1 column
unique_genotypes <- unique(control$condition1)
Genotype1 <- control$condition1 == unique_genotypes[1]
# Select rows based on the condition and all columns
Moneymaker <- control[Genotype1, c('ID')]
# Convert the "ID" column to a character vector
Moneymaker_C0 <- X1[, as.character(Moneymaker)]
# Convert Moneymaker_C0 to a data frame
Moneymaker_C0 <- data.frame(Moneymaker_C0)
# Add condition1 column with values "Control"
Moneymaker_C0$condition2 <- unique_times[1]
# Reshape the data
CTR_Moneymaker_C0 <- Moneymaker_C0 %>%
gather(key = "Variable", value = "Score", -condition2)
# Create a new column "condition1" with the value "Moneymaker"
CTR_Moneymaker_C0$condition1 <- unique_genotypes[1]
# Control Genotype2 based selection
Genotype2 <- control$condition1 == unique_genotypes[2]
# Select rows based on the condition and all columns
Saladette <- control[Genotype2, c('ID')]
# Convert the "ID" column to a character vector
Saladette_C0 <- X1[, as.character(Saladette)]
# Convert Saladette_C0 to a data frame
Saladette_C0 <- data.frame(Saladette_C0)
# Add condition1 column with values "Control"
Saladette_C0$condition2 <- unique_times[1]
# Reshape the data
CTR_Saladette_C0 <- Saladette_C0 %>%
gather(key = "Variable", value = "Score", -condition2)
# Create a new column "condition1" with the value "Saladette"
CTR_Saladette_C0$condition1 <- unique_genotypes[2]
# Treated data
# treated condition for selecting rows based on values
condition <- meta_data$condition2 == unique_times[2]
# Select rows based on the condition and all columns
treated <- meta_data[condition, ]
# Genotype1 based selection
# Step 2: Find the unique values in the condition1 column
unique_genotypes <- unique(treated$condition1)
Genotype1 <- treated$condition1 == unique_genotypes[1]
# Select rows based on the condition and all columns
Moneymaker <- treated[Genotype1, c('ID')]
# Convert the "ID" column to a character vector
Moneymaker_T <- X1[, as.character(Moneymaker)]
# Convert Moneymaker_T to a data frame
Moneymaker_T <- data.frame(Moneymaker_T)
# Add condition1 column with values "Control"
Moneymaker_T$condition2 <- unique_times[2]
# Reshape the data
Moneymaker_T <- Moneymaker_T %>%
gather(key = "Variable", value = "Score", -condition2)
# Create a new column "condition1" with the value "Moneymaker"
Moneymaker_T$condition1 <- unique_genotypes[1]
# Treated Genotype2 based selection
Genotype2 <- treated$condition1 == unique_genotypes[2]
# Select rows based on the condition and all columns
Saladette <- treated[Genotype2, c('ID')]
# Convert the "ID" column to a character vector
Saladette_T <- X1[, as.character(Saladette)]
# Convert Saladette_T to a data frame
Saladette_T <- data.frame(Saladette_T)
# Add condition1 column with values "Control"
Saladette_T$condition2 <- unique_times[2]
# Reshape the data
Saladette_T <- Saladette_T %>%
gather(key = "Variable", value = "Score", -condition2)
# Create a new column "condition1" with the value "Saladette"
Saladette_T$condition1 <- unique_genotypes[2]
#merging all tables
merged_df1 <- merge(CTR_Moneymaker_C0, CTR_Saladette_C0, all = TRUE)
merged_df2 <- merge(Moneymaker_T, Saladette_T, all = TRUE)
#merging INTO FINAL tables
CTR_TR_Geno <- merge(merged_df1, merged_df2, all = TRUE)
# Input directory and data
my_data <- CTR_TR_Geno
# Step 3: Run the two-way ANOVA using the "aov" function
my_model <- aov(Score ~ condition2 + condition1 + condition2:condition1, data = my_data)
# Step 4: Check the ANOVA table to see if there are significant effects for each factor and their interaction
a = summary(my_model)
anova_t = a[[1]]
# list output
#anova_data(anova_t)
}
View(my_data)
View(X1)
View(X2)
View(X3)
View(my_data)
View(meta_data)
View(meta_data)
getwd()
View(X1)
View(meta_data)
harmfile1 <- read.csv("C:/Users/Owner/Documents/nam_data/panomiX_tool/counts_Moneymaker_tpm.csv", row.names = 1, check.names = FALSE)
harmfile2 <- read.csv("C:/Users/Owner/Documents/nam_data/panomiX_tool/FTIR_Moneymaker_smooth.csv", row.names = 1, check.names = FALSE)
harmfile3 <- read.csv("C:/Users/Owner/Documents/nam_data/panomiX_tool/pca_cor_moneymaker_all_days.csv", row.names = 1, check.names = FALSE)
meta_data <- read.csv("C:/Users/Owner/Documents/nam_data/panomiX_tool/meta_data_Moneymaker_PC.csv", check.names = FALSE)
harmfile1 <- read.csv("C:/Users/Owner/Documents/nam_data/panomiX_tool/counts_Moneymaker_tpm.csv", row.names = 1, check.names = FALSE)
harmfile2 <- read.csv("C:/Users/Owner/Documents/nam_data/panomiX_tool/FTIR_Moneymaker_smooth.csv", row.names = 1, check.names = FALSE)
harmfile3 <- read.csv("C:/Users/Owner/Documents/nam_data/panomiX_tool/pca_cor_moneymaker_all_days.csv", row.names = 1, check.names = FALSE)
meta_data <- read.csv("C:/Users/Owner/Documents/nam_data/panomiX_tool/meta_data_Moneymaker_PC.csv", check.names = FALSE)
View(harmfile1)
View(harmfile2)
View(harmfile3)
View(meta_data)
View(harmfile3)
View(meta_data)
rownames(harmfile1) <- NULL
rownames(harmfile2) <- NULL
rownames(harmfile3) <- NULL
# Find common columns across all three data frames
common_columns <- Reduce(intersect, list(colnames(harmfile1), colnames(harmfile2), colnames(harmfile3)))
# Find common columns across all three data frames
common_columns <- Reduce(intersect, list(colnames(harmfile1), colnames(harmfile2), colnames(harmfile3)))
# Subset each data frame based on the common columns
X1 <- harmfile1[, common_columns]
X2 <- harmfile2[, common_columns]
X3 <- harmfile3[, common_columns]
View(X1)
View(X2)
View(meta_data)
# Subset meta_data to include rows matching common_columns
meta_data <- meta_data[meta_data$ID %in% common_columns, ]
View(meta_data)
# Ensure the order of meta_data matches common_columns
meta_data <- meta_data[match(common_columns, meta_data$ID), ]
View(meta_data)
View(meta_data)
# Control data
# Step 1: Find the unique values in the condition1 column
unique_times <- unique(meta_data$condition2)
if (!(length(unique_times) > 1)) {
# Control condition for selecting rows based on values
condition <- meta_data$condition2 == unique_times[1]
# Select rows based on the condition and all columns
control <- meta_data[condition, ]
# Genotype1 based selection
# Step 2: Find the unique values in the condition1 column
unique_genotypes <- unique(control$condition1)
Genotype1 <- control$condition1 == unique_genotypes[1]
# Select rows based on the condition and all columns
Moneymaker <- control[Genotype1, c('ID')]
# Convert the "ID" column to a character vector
Moneymaker_C0 <- X1[, as.character(Moneymaker)]
# Convert Moneymaker_C0 to a data frame
Moneymaker_C0 <- data.frame(Moneymaker_C0)
# Add condition1 column with values "Control"
Moneymaker_C0$condition2 <- unique_times[1]
# Reshape the data
CTR_Moneymaker_C0 <- Moneymaker_C0 %>%
gather(key = "Variable", value = "Score", -condition2)
# Create a new column "condition1" with the value "Moneymaker"
CTR_Moneymaker_C0$condition1 <- unique_genotypes[1]
# Control Genotype2 based selection
Genotype2 <- control$condition1 == unique_genotypes[2]
# Select rows based on the condition and all columns
Saladette <- control[Genotype2, c('ID')]
# Convert the "ID" column to a character vector
Saladette_C0 <- X1[, as.character(Saladette)]
# Convert Saladette_C0 to a data frame
Saladette_C0 <- data.frame(Saladette_C0)
# Add condition1 column with values "Control"
Saladette_C0$condition2 <- unique_times[1]
# Reshape the data
CTR_Saladette_C0 <- Saladette_C0 %>%
gather(key = "Variable", value = "Score", -condition2)
# Create a new column "condition1" with the value "Saladette"
CTR_Saladette_C0$condition1 <- unique_genotypes[2]
merged_df1 <- merge(CTR_Moneymaker_C0, CTR_Saladette_C0, all = TRUE)
# Input directory and data
my_data <- merged_df1
# Step 3: Run the two-way ANOVA using the "aov" function
#my_model <- aov(Score ~ condition1 + condition2:condition1, data = my_data)
# Run one-way ANOVA
my_model <- aov(Score ~ condition1, data = my_data)
# Step 4: Check the ANOVA table to see if there are significant effects for each factor and their interaction
a = summary(my_model)
anova_t = a[[1]]
# list output
#anova_data(anova_t)
} else if (length(unique_times) >= 2) {
# Control condition for selecting rows based on values
condition <- meta_data$condition2 == unique_times[1]
# Select rows based on the condition and all columns
control <- meta_data[condition, ]
# Genotype1 based selection
# Step 2: Find the unique values in the condition1 column
unique_genotypes <- unique(control$condition1)
Genotype1 <- control$condition1 == unique_genotypes[1]
# Select rows based on the condition and all columns
Moneymaker <- control[Genotype1, c('ID')]
# Convert the "ID" column to a character vector
Moneymaker_C0 <- X1[, as.character(Moneymaker)]
# Convert Moneymaker_C0 to a data frame
Moneymaker_C0 <- data.frame(Moneymaker_C0)
# Add condition1 column with values "Control"
Moneymaker_C0$condition2 <- unique_times[1]
# Reshape the data
CTR_Moneymaker_C0 <- Moneymaker_C0 %>%
gather(key = "Variable", value = "Score", -condition2)
# Create a new column "condition1" with the value "Moneymaker"
CTR_Moneymaker_C0$condition1 <- unique_genotypes[1]
# Control Genotype2 based selection
Genotype2 <- control$condition1 == unique_genotypes[2]
# Select rows based on the condition and all columns
Saladette <- control[Genotype2, c('ID')]
# Convert the "ID" column to a character vector
Saladette_C0 <- X1[, as.character(Saladette)]
# Convert Saladette_C0 to a data frame
Saladette_C0 <- data.frame(Saladette_C0)
# Add condition1 column with values "Control"
Saladette_C0$condition2 <- unique_times[1]
# Reshape the data
CTR_Saladette_C0 <- Saladette_C0 %>%
gather(key = "Variable", value = "Score", -condition2)
# Create a new column "condition1" with the value "Saladette"
CTR_Saladette_C0$condition1 <- unique_genotypes[2]
# Treated data
# treated condition for selecting rows based on values
condition <- meta_data$condition2 == unique_times[2]
# Select rows based on the condition and all columns
treated <- meta_data[condition, ]
# Genotype1 based selection
# Step 2: Find the unique values in the condition1 column
unique_genotypes <- unique(treated$condition1)
Genotype1 <- treated$condition1 == unique_genotypes[1]
# Select rows based on the condition and all columns
Moneymaker <- treated[Genotype1, c('ID')]
# Convert the "ID" column to a character vector
Moneymaker_T <- X1[, as.character(Moneymaker)]
# Convert Moneymaker_T to a data frame
Moneymaker_T <- data.frame(Moneymaker_T)
# Add condition1 column with values "Control"
Moneymaker_T$condition2 <- unique_times[2]
# Reshape the data
Moneymaker_T <- Moneymaker_T %>%
gather(key = "Variable", value = "Score", -condition2)
# Create a new column "condition1" with the value "Moneymaker"
Moneymaker_T$condition1 <- unique_genotypes[1]
# Treated Genotype2 based selection
Genotype2 <- treated$condition1 == unique_genotypes[2]
# Select rows based on the condition and all columns
Saladette <- treated[Genotype2, c('ID')]
# Convert the "ID" column to a character vector
Saladette_T <- X1[, as.character(Saladette)]
# Convert Saladette_T to a data frame
Saladette_T <- data.frame(Saladette_T)
# Add condition1 column with values "Control"
Saladette_T$condition2 <- unique_times[2]
# Reshape the data
Saladette_T <- Saladette_T %>%
gather(key = "Variable", value = "Score", -condition2)
# Create a new column "condition1" with the value "Saladette"
Saladette_T$condition1 <- unique_genotypes[2]
#merging all tables
merged_df1 <- merge(CTR_Moneymaker_C0, CTR_Saladette_C0, all = TRUE)
merged_df2 <- merge(Moneymaker_T, Saladette_T, all = TRUE)
#merging INTO FINAL tables
CTR_TR_Geno <- merge(merged_df1, merged_df2, all = TRUE)
# Input directory and data
my_data <- CTR_TR_Geno
# Step 3: Run the two-way ANOVA using the "aov" function
my_model <- aov(Score ~ condition2 + condition1 + condition2:condition1, data = my_data)
# Step 4: Check the ANOVA table to see if there are significant effects for each factor and their interaction
a = summary(my_model)
anova_t = a[[1]]
# list output
#anova_data(anova_t)
}
anova_t
runApp()
